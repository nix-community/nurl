name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (musl)
        if: contains(matrix.target, 'musl')
        run: |
          sudo apt update
          sudo apt install musl-tools

      - name: Cargo build
        run: |
          rustup toolchain install stable --profile minimal -t ${{ matrix.target }}
          cargo build --target ${{ matrix.target }}
        env:
          GEN_ARTIFACTS: artifacts

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Set up cachix
        uses: cachix/cachix-action@v14
        with:
          name: nix-community
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Cargo test
        run: cargo test

  clippy-rustfmt:
    name: clippy-rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Cargo: clippy, fmt"
        run: |
          rustup toolchain install stable --profile minimal -c clippy
          rustup toolchain install nightly --profile minimal -c rustfmt
          cargo +stable clippy -- -D warnings
          cargo +nightly fmt -- --check
